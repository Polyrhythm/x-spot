// DO NOT EDIT! Generated by generate-graph-nodes.

enum {
    TOOT__IN_EVENT,
    TOOT__OUT_EVENT,
};

static void toot_node_f(tm_graph_interpreter_context_t *ctx)
{

    toot(ctx);

    tm_graph_interpreter_api->trigger_wire(ctx->interpreter, ctx->wires[TOOT__OUT_EVENT]);
}

static tm_graph_component_node_type_i toot_node = {
    .definition_path = __FILE__,
    .name = "tm_toot",
    .category = TM_LOCALIZE_LATER("Story"),
    .static_connectors.in = {
        { "", TM_TT_TYPE_HASH__GRAPH_EVENT },
    },
    .static_connectors.num_in = 1,
    .static_connectors.out = {
        { "", TM_TT_TYPE_HASH__GRAPH_EVENT },
    },
    .static_connectors.num_out = 1,
    .run = toot_node_f,
};

enum {
    GET_SCENE__ROOT_ENTITY,
    GET_SCENE__SCENE_IDX,
    GET_SCENE__OUT_SCENE_ENTITY,
};

static const tm_graph_generic_value_t get_scene_scene_idx_default_value = { .f = (float[1]){ 0 } };

static void get_scene_node_f(tm_graph_interpreter_context_t *ctx)
{
    const tm_graph_interpreter_wire_content_t root_entity_w = tm_graph_interpreter_api->read_wire(ctx->interpreter, ctx->wires[GET_SCENE__ROOT_ENTITY]);
    const tm_graph_interpreter_wire_content_t scene_idx_w = tm_graph_interpreter_api->read_wire(ctx->interpreter, ctx->wires[GET_SCENE__SCENE_IDX]);

    if (root_entity_w.n == 0)
        return;

    const tm_entity_t root_entity = *(tm_entity_t *)root_entity_w.data;
    const float scene_idx = scene_idx_w.n > 0 ? *(float *)scene_idx_w.data : *get_scene_scene_idx_default_value.f;

    tm_entity_t *scene_entity = tm_graph_interpreter_api->write_wire(ctx->interpreter, ctx->wires[GET_SCENE__OUT_SCENE_ENTITY], 1, sizeof(*scene_entity));

    get_scene(ctx, root_entity, scene_idx, scene_entity);
}

static tm_graph_component_node_type_i get_scene_node = {
    .definition_path = __FILE__,
    .name = "tm_get_scene",
    .category = TM_LOCALIZE_LATER("Story"),
    .static_connectors.in = {
        { "root_entity", TM_TT_TYPE_HASH__ENTITY_T },
        { "scene_idx", TM_TT_TYPE_HASH__FLOAT, .optional = true, .default_value = &get_scene_scene_idx_default_value },
    },
    .static_connectors.num_in = 2,
    .static_connectors.out = {
        { "scene_entity", TM_TT_TYPE_HASH__ENTITY_T },
    },
    .static_connectors.num_out = 1,
    .run = get_scene_node_f,
};
